name: AppImage

on: [workflow_dispatch]

env:
  PYVER: "3.12"
  QT_API: "pyqt5"

jobs:
  appimage:
    runs-on: ubuntu-20.04  # Use oldest available Ubuntu for maximum glibc compatibility
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "${{ env.PYVER }}" }
      - run: python -m pip install --upgrade pip setuptools wheel
      - run: python -m pip install --upgrade -e .[$QT_API]  # install dependencies (installing GF itself isn't necessary)
      - run: python -m pip install --upgrade git+https://github.com/niess/python-appimage
      - run: ./update-resources.py --freeze $QT_API
      - run: ./pkg/appimage/write-requirements.sh
      - run: python -m python_appimage -v build app -p $PYVER ./pkg/appimage
      - name: AppImage thinning
        run: |
          ./GitFourchette-*.AppImage --appimage-extract
          rm -v ./GitFourchette-*.AppImage
          mv squashfs-root AppDir
          ./pkg/appimage/thinner.sh AppDir
          ~/.local/bin/appimagetool --no-appstream AppDir
          chmod +x GitFourchette*.AppImage
      - uses: actions/upload-artifact@v4
        with: { path: GitFourchette*.AppImage, compression-level: 0 }
